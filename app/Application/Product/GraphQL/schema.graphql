type Query {
    products: [Product!]! @field(resolver: "App\\Application\\Product\\GraphQL\\Queries\\ProductQuery@products")
    product(id: ID!): Product  @field(resolver: "App\\Application\\Product\\GraphQL\\Queries\\ProductQuery@product")
}

type Product {
    id: Int!
    name: String!
    description: String
    price: Float!
}

extend type Mutation {
    createProduct(input: CreateProductInput!): Product!  @field(resolver: "App\\Application\\Products\\GraphQL\\Mutations\\ProductMutation@createProduct")
    updateProduct(input: UpdateProductInput!): Product!  @field(resolver: "App\\Application\\Products\\GraphQL\\Mutations\\ProductMutation@updateProduct")
    deleteProduct(id: ID!): Boolean!  @field(resolver: "App\\Application\\Products\\GraphQL\\Mutations\\ProductMutation@deleteProduct")
}

input CreateProductInput {
    name: String!
    description: String
    price: Float!
}

input UpdateProductInput {
    id: ID!
    name: String
    description: String
    price: Float
}
